// This file was automatically generated by Java-GI. Do not edit this file
// directly! Visit <https://github.com/jwharm/java-gi/> for more information.
//
// The API documentation in this file was derived from GObject-Introspection
// metadata and may include text or comments from the original C sources.
//
// Copyright (c), upstream authors as identified in the GObject-Introspection
// metadata.
//
// This generated file is distributed under the same license as the original
// GObject-Introspection data, unless otherwise specified. Users of this file
// are responsible for complying with any licenses or terms required by the
// original authors.
//
// THIS FILE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT.
//
package goa;

import io.github.jwharm.javagi.base.GErrorException;
import io.github.jwharm.javagi.gobject.InstanceCache;
import io.github.jwharm.javagi.gobject.types.TypeCache;
import io.github.jwharm.javagi.interop.ArenaCloseAction;
import io.github.jwharm.javagi.interop.Interop;
import java.lang.String;
import java.lang.foreign.Arena;
import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.ValueLayout;
import java.lang.invoke.MethodHandle;
import java.util.EnumSet;
import java.util.Set;
import javax.annotation.processing.Generated;
import org.gnome.gio.AsyncInitable;
import org.gnome.gio.AsyncReadyCallback;
import org.gnome.gio.AsyncResult;
import org.gnome.gio.BusType;
import org.gnome.gio.Cancellable;
import org.gnome.gio.DBusConnection;
import org.gnome.gio.DBusObjectManager;
import org.gnome.gio.DBusObjectManagerClient;
import org.gnome.gio.DBusObjectManagerClientFlags;
import org.gnome.gio.Initable;
import org.gnome.glib.Type;
import org.gnome.gobject.GObject;
import org.gnome.gobject.Value;
import org.jetbrains.annotations.Nullable;

/**
 * The {@code GoaObjectManagerClient} structure contains only private data and should only be accessed using the provided API.
 */
@Generated("io.github.jwharm.JavaGI")
public class ObjectManagerClient extends DBusObjectManagerClient implements AsyncInitable, DBusObjectManager, Initable {
    static {
        Goa.javagi$ensureInitialized();
    }

    /**
     * Create a ObjectManagerClient proxy instance for the provided memory address.
     *
     * @param address the memory address of the native object
     */
    public ObjectManagerClient(MemorySegment address) {
        super(Interop.reinterpret(address, getMemoryLayout().byteSize()));
    }

    /**
     * Creates a new ObjectManagerClient.
     */
    public ObjectManagerClient() {
        super((MemorySegment) null);
        InstanceCache.newGObject(this, TypeCache.getType(this.getClass()), getMemoryLayout().byteSize(), (Object[]) null);
    }

    /**
     * Get the GType of the ObjectManagerClient class
     *
     * @return the GType
     */
    public static Type getType() {
        return Interop.getType("goa_object_manager_client_get_type");
    }

    /**
     * The memory layout of the native struct.
     * @return the memory layout
     */
    public static MemoryLayout getMemoryLayout() {
        return MemoryLayout.structLayout(
            DBusObjectManagerClient.getMemoryLayout().withName("parent_instance"),
            ValueLayout.ADDRESS.withName("priv")
        ).withName("GoaObjectManagerClient");
    }

    /**
     * Returns this instance as if it were its parent type. This is mostly
     * synonymous to the Java {@code super} keyword, but will set the native
     * typeclass function pointers to the parent type. When overriding a native
     * virtual method in Java, "chaining up" with {@code super.methodName()}
     * doesn't work, because it invokes the overridden function pointer again.
     * To chain up, call {@code asParent().methodName()}. This will call the
     * native function pointer of this virtual method in the typeclass of the
     * parent type.
     */
    protected ObjectManagerClient asParent() {
        ObjectManagerClient _parent = new ObjectManagerClient(handle());
        _parent.callParent(true);
        return _parent;
    }

    /**
     * Finishes an operation started with goa_object_manager_client_new().
     *
     * @param res The {@code GAsyncResult} obtained from the {@code GAsyncReadyCallback} passed to goa_object_manager_client_new().
     * @return The constructed object manager client or {@code null} if {@code error} is set.
     * @throws GErrorException see {@link org.gnome.glib.GError}
     */
    public static ObjectManagerClient finish(AsyncResult res) throws GErrorException {
        var _result = constructFinish(res);
        return (ObjectManagerClient) InstanceCache.getForType(_result, ObjectManagerClient::new);
    }

    private static MemorySegment constructFinish(AsyncResult res) throws GErrorException {
        try (var _arena = Arena.ofConfined()) {
            MemorySegment _gerror = _arena.allocate(ValueLayout.ADDRESS);
            MemorySegment _result;
            try {
                _result = (MemorySegment) MethodHandles.goa_object_manager_client_new_finish.invokeExact(
                        (MemorySegment) (res == null ? MemorySegment.NULL : res.handle()), _gerror);
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
            if (GErrorException.isErrorSet(_gerror)) {
                throw new GErrorException(_gerror);
            }
            return _result;
        }
    }

    /**
     * Finishes an operation started with goa_object_manager_client_new_for_bus().
     *
     * @param res The {@code GAsyncResult} obtained from the {@code GAsyncReadyCallback} passed to goa_object_manager_client_new_for_bus().
     * @return The constructed object manager client or {@code null} if {@code error} is set.
     * @throws GErrorException see {@link org.gnome.glib.GError}
     */
    public static ObjectManagerClient forBusFinish(AsyncResult res) throws GErrorException {
        var _result = constructForBusFinish(res);
        return (ObjectManagerClient) InstanceCache.getForType(_result, ObjectManagerClient::new);
    }

    private static MemorySegment constructForBusFinish(AsyncResult res) throws GErrorException {
        try (var _arena = Arena.ofConfined()) {
            MemorySegment _gerror = _arena.allocate(ValueLayout.ADDRESS);
            MemorySegment _result;
            try {
                _result = (MemorySegment) MethodHandles.goa_object_manager_client_new_for_bus_finish.invokeExact(
                        (MemorySegment) (res == null ? MemorySegment.NULL : res.handle()), _gerror);
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
            if (GErrorException.isErrorSet(_gerror)) {
                throw new GErrorException(_gerror);
            }
            return _result;
        }
    }

    /**
     * Like goa_object_manager_client_new_sync() but takes a {@code GBusType} instead of a {@code GDBusConnection}.
     * <p>
     * The calling thread is blocked until a reply is received.
     * <p>
     * See goa_object_manager_client_new_for_bus() for the asynchronous version of this constructor.
     *
     * @param busType A {@code GBusType}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique).
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @return The constructed object manager client or {@code null} if {@code error} is set.
     * @throws GErrorException see {@link org.gnome.glib.GError}
     */
    public static ObjectManagerClient forBusSync(BusType busType,
            Set<DBusObjectManagerClientFlags> flags, String name, String objectPath,
            @Nullable Cancellable cancellable) throws GErrorException {
        var _result = constructForBusSync(busType, flags, name, objectPath, cancellable);
        return (ObjectManagerClient) InstanceCache.getForType(_result, ObjectManagerClient::new);
    }

    private static MemorySegment constructForBusSync(BusType busType,
            Set<DBusObjectManagerClientFlags> flags, String name, String objectPath,
            @Nullable Cancellable cancellable) throws GErrorException {
        try (var _arena = Arena.ofConfined()) {
            MemorySegment _gerror = _arena.allocate(ValueLayout.ADDRESS);
            MemorySegment _result;
            try {
                _result = (MemorySegment) MethodHandles.goa_object_manager_client_new_for_bus_sync.invokeExact(
                        busType.getValue(), Interop.enumSetToInt(flags), 
                        (MemorySegment) (name == null ? MemorySegment.NULL : Interop.allocateNativeString(name, _arena)), 
                        (MemorySegment) (objectPath == null ? MemorySegment.NULL : Interop.allocateNativeString(objectPath, _arena)), 
                        (MemorySegment) (cancellable == null ? MemorySegment.NULL : cancellable.handle()), _gerror);
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
            if (GErrorException.isErrorSet(_gerror)) {
                throw new GErrorException(_gerror);
            }
            return _result;
        }
    }

    /**
     * Like goa_object_manager_client_new_sync() but takes a {@code GBusType} instead of a {@code GDBusConnection}.
     * <p>
     * The calling thread is blocked until a reply is received.
     * <p>
     * See goa_object_manager_client_new_for_bus() for the asynchronous version of this constructor.
     *
     * @param busType A {@code GBusType}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique).
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @return The constructed object manager client or {@code null} if {@code error} is set.
     * @throws GErrorException see {@link org.gnome.glib.GError}
     */
    public static ObjectManagerClient forBusSync(BusType busType,
            DBusObjectManagerClientFlags flags, String name, String objectPath,
            @Nullable Cancellable cancellable) throws GErrorException {
        return forBusSync(busType, EnumSet.of(flags), name, objectPath, cancellable);
    }

    /**
     * Synchronously creates {@code GDBusObjectManagerClient} using goa_object_manager_client_get_proxy_type() as the {@code GDBusProxyTypeFunc}. See g_dbus_object_manager_client_new_sync() for more details.
     * <p>
     * The calling thread is blocked until a reply is received.
     * <p>
     * See goa_object_manager_client_new() for the asynchronous version of this constructor.
     *
     * @param connection A {@code GDBusConnection}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique) or {@code null} if {@code connection} is not a message bus connection.
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @return The constructed object manager client or {@code null} if {@code error} is set.
     * @throws GErrorException see {@link org.gnome.glib.GError}
     */
    public static ObjectManagerClient sync(DBusConnection connection,
            Set<DBusObjectManagerClientFlags> flags, @Nullable String name, String objectPath,
            @Nullable Cancellable cancellable) throws GErrorException {
        var _result = constructSync(connection, flags, name, objectPath, cancellable);
        return (ObjectManagerClient) InstanceCache.getForType(_result, ObjectManagerClient::new);
    }

    private static MemorySegment constructSync(DBusConnection connection,
            Set<DBusObjectManagerClientFlags> flags, @Nullable String name, String objectPath,
            @Nullable Cancellable cancellable) throws GErrorException {
        try (var _arena = Arena.ofConfined()) {
            MemorySegment _gerror = _arena.allocate(ValueLayout.ADDRESS);
            MemorySegment _result;
            try {
                _result = (MemorySegment) MethodHandles.goa_object_manager_client_new_sync.invokeExact(
                        (MemorySegment) (connection == null ? MemorySegment.NULL : connection.handle()), 
                        Interop.enumSetToInt(flags), 
                        (MemorySegment) (name == null ? MemorySegment.NULL : Interop.allocateNativeString(name, _arena)), 
                        (MemorySegment) (objectPath == null ? MemorySegment.NULL : Interop.allocateNativeString(objectPath, _arena)), 
                        (MemorySegment) (cancellable == null ? MemorySegment.NULL : cancellable.handle()), _gerror);
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
            if (GErrorException.isErrorSet(_gerror)) {
                throw new GErrorException(_gerror);
            }
            return _result;
        }
    }

    /**
     * Synchronously creates {@code GDBusObjectManagerClient} using goa_object_manager_client_get_proxy_type() as the {@code GDBusProxyTypeFunc}. See g_dbus_object_manager_client_new_sync() for more details.
     * <p>
     * The calling thread is blocked until a reply is received.
     * <p>
     * See goa_object_manager_client_new() for the asynchronous version of this constructor.
     *
     * @param connection A {@code GDBusConnection}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique) or {@code null} if {@code connection} is not a message bus connection.
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @return The constructed object manager client or {@code null} if {@code error} is set.
     * @throws GErrorException see {@link org.gnome.glib.GError}
     */
    public static ObjectManagerClient sync(DBusConnection connection,
            DBusObjectManagerClientFlags flags, @Nullable String name, String objectPath,
            @Nullable Cancellable cancellable) throws GErrorException {
        return sync(connection, EnumSet.of(flags), name, objectPath, cancellable);
    }

    /**
     * A {@code GDBusProxyTypeFunc} that maps {@code interfaceName} to the generated {@code GDBusObjectProxy} derived and {@code GDBusProxy} derived types.
     *
     * @param manager A {@code GDBusObjectManagerClient}.
     * @param objectPath The object path of the remote object (unused).
     * @param interfaceName Interface name of the remote object or {@code null} to get the object proxy {@code GType}.
     * @param userData User data (unused).
     * @return A {@code GDBusProxy} derived {@code GType} if {@code interfaceName} is not {@code null}, otherwise the {@code GType} for {@code GoaObjectProxy}.
     */
    public static Type getProxyType(DBusObjectManagerClient manager, String objectPath,
            @Nullable String interfaceName, @Nullable MemorySegment userData) {
        try (var _arena = Arena.ofConfined()) {
            long _result;
            try {
                _result = (long) MethodHandles.goa_object_manager_client_get_proxy_type.invokeExact(
                        (MemorySegment) (manager == null ? MemorySegment.NULL : manager.handle()), 
                        (MemorySegment) (objectPath == null ? MemorySegment.NULL : Interop.allocateNativeString(objectPath, _arena)), 
                        (MemorySegment) (interfaceName == null ? MemorySegment.NULL : Interop.allocateNativeString(interfaceName, _arena)), 
                        (MemorySegment) (userData == null ? MemorySegment.NULL : userData));
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
            Type _returnValue = new Type(_result);
            return _returnValue;
        }
    }

    /**
     * Asynchronously creates {@code GDBusObjectManagerClient} using goa_object_manager_client_get_proxy_type() as the {@code GDBusProxyTypeFunc}. See g_dbus_object_manager_client_new() for more details.
     * <p>
     * When the operation is finished, {@code callback} will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
     * You can then call goa_object_manager_client_new_finish() to get the result of the operation.
     * <p>
     * See goa_object_manager_client_new_sync() for the synchronous, blocking version of this constructor.
     *
     * @param connection A {@code GDBusConnection}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique) or {@code null} if {@code connection} is not a message bus connection.
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @param callback A {@code GAsyncReadyCallback} to call when the request is satisfied.
     */
    public static void new_(DBusConnection connection, Set<DBusObjectManagerClientFlags> flags,
            @Nullable String name, String objectPath, @Nullable Cancellable cancellable,
            @Nullable AsyncReadyCallback callback) {
        try (var _arena = Arena.ofConfined()) {
            final Arena _callbackScope = Arena.ofShared();
            if (callback != null) ArenaCloseAction.CLEANER.register(callback, new ArenaCloseAction(_callbackScope));
            try {
                MethodHandles.goa_object_manager_client_new.invokeExact(
                        (MemorySegment) (connection == null ? MemorySegment.NULL : connection.handle()), 
                        Interop.enumSetToInt(flags), 
                        (MemorySegment) (name == null ? MemorySegment.NULL : Interop.allocateNativeString(name, _arena)), 
                        (MemorySegment) (objectPath == null ? MemorySegment.NULL : Interop.allocateNativeString(objectPath, _arena)), 
                        (MemorySegment) (cancellable == null ? MemorySegment.NULL : cancellable.handle()), 
                        (MemorySegment) (callback == null ? MemorySegment.NULL : callback.toCallback(_callbackScope)), 
                        MemorySegment.NULL);
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
        }
    }

    /**
     * Asynchronously creates {@code GDBusObjectManagerClient} using goa_object_manager_client_get_proxy_type() as the {@code GDBusProxyTypeFunc}. See g_dbus_object_manager_client_new() for more details.
     * <p>
     * When the operation is finished, {@code callback} will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
     * You can then call goa_object_manager_client_new_finish() to get the result of the operation.
     * <p>
     * See goa_object_manager_client_new_sync() for the synchronous, blocking version of this constructor.
     *
     * @param connection A {@code GDBusConnection}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique) or {@code null} if {@code connection} is not a message bus connection.
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @param callback A {@code GAsyncReadyCallback} to call when the request is satisfied.
     */
    public static void new_(DBusConnection connection, DBusObjectManagerClientFlags flags,
            @Nullable String name, String objectPath, @Nullable Cancellable cancellable,
            @Nullable AsyncReadyCallback callback) {
        new_(connection, EnumSet.of(flags), name, objectPath, cancellable, callback);
    }

    /**
     * Like goa_object_manager_client_new() but takes a {@code GBusType} instead of a {@code GDBusConnection}.
     * <p>
     * When the operation is finished, {@code callback} will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
     * You can then call goa_object_manager_client_new_for_bus_finish() to get the result of the operation.
     * <p>
     * See goa_object_manager_client_new_for_bus_sync() for the synchronous, blocking version of this constructor.
     *
     * @param busType A {@code GBusType}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique).
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @param callback A {@code GAsyncReadyCallback} to call when the request is satisfied.
     */
    public static void newForBus(BusType busType, Set<DBusObjectManagerClientFlags> flags,
            String name, String objectPath, @Nullable Cancellable cancellable,
            @Nullable AsyncReadyCallback callback) {
        try (var _arena = Arena.ofConfined()) {
            final Arena _callbackScope = Arena.ofShared();
            if (callback != null) ArenaCloseAction.CLEANER.register(callback, new ArenaCloseAction(_callbackScope));
            try {
                MethodHandles.goa_object_manager_client_new_for_bus.invokeExact(busType.getValue(), 
                        Interop.enumSetToInt(flags), 
                        (MemorySegment) (name == null ? MemorySegment.NULL : Interop.allocateNativeString(name, _arena)), 
                        (MemorySegment) (objectPath == null ? MemorySegment.NULL : Interop.allocateNativeString(objectPath, _arena)), 
                        (MemorySegment) (cancellable == null ? MemorySegment.NULL : cancellable.handle()), 
                        (MemorySegment) (callback == null ? MemorySegment.NULL : callback.toCallback(_callbackScope)), 
                        MemorySegment.NULL);
            } catch (Throwable _err) {
                throw new AssertionError(_err);
            }
        }
    }

    /**
     * Like goa_object_manager_client_new() but takes a {@code GBusType} instead of a {@code GDBusConnection}.
     * <p>
     * When the operation is finished, {@code callback} will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
     * You can then call goa_object_manager_client_new_for_bus_finish() to get the result of the operation.
     * <p>
     * See goa_object_manager_client_new_for_bus_sync() for the synchronous, blocking version of this constructor.
     *
     * @param busType A {@code GBusType}.
     * @param flags Flags from the {@code GDBusObjectManagerClientFlags} enumeration.
     * @param name A bus name (well-known or unique).
     * @param objectPath An object path.
     * @param cancellable A {@code GCancellable} or {@code null}.
     * @param callback A {@code GAsyncReadyCallback} to call when the request is satisfied.
     */
    public static void newForBus(BusType busType, DBusObjectManagerClientFlags flags, String name,
            String objectPath, @Nullable Cancellable cancellable,
            @Nullable AsyncReadyCallback callback) {
        newForBus(busType, EnumSet.of(flags), name, objectPath, cancellable, callback);
    }

    /**
     * A {@link Builder} object constructs a {@code ObjectManagerClient}
     * with the specified properties.
     * Use the various {@code set...()} methods to set properties,
     * and finish construction with {@link Builder#build()}.
     */
    public static Builder<? extends Builder> builder() {
        return new Builder<>();
    }

    /**
     * Class structure for {@code GoaObjectManagerClient}.
     */
    public static class ObjectManagerClientClass extends DBusObjectManagerClient.DBusObjectManagerClientClass {
        /**
         * Create a ObjectManagerClientClass proxy instance for the provided memory address.
         *
         * @param address the memory address of the native object
         */
        public ObjectManagerClientClass(MemorySegment address) {
            super(Interop.reinterpret(address, getMemoryLayout().byteSize()));
        }

        /**
         * Allocate a new ObjectManagerClientClass.
         *
         * @param arena to control the memory allocation scope
         */
        public ObjectManagerClientClass(Arena arena) {
            super(arena.allocate(getMemoryLayout()));
        }

        /**
         * Allocate a new ObjectManagerClientClass.
         * The memory is allocated with {@link Arena#ofAuto}.
         */
        public ObjectManagerClientClass() {
            super(Arena.ofAuto().allocate(getMemoryLayout()));
        }

        /**
         * The memory layout of the native struct.
         * @return the memory layout
         */
        public static MemoryLayout getMemoryLayout() {
            return MemoryLayout.structLayout(
                DBusObjectManagerClient.DBusObjectManagerClientClass.getMemoryLayout().withName("parent_class")
            ).withName("GoaObjectManagerClientClass");
        }
    }

    /**
     * Inner class implementing a builder pattern to construct a GObject with
     * properties.
     *
     * @param <B> the type of the Builder that is returned
     */
    public static class Builder<B extends Builder<B>> extends DBusObjectManagerClient.Builder<B> {
        /**
         * Default constructor for a {@code Builder} object.
         */
        protected Builder() {
        }

        /**
         * Finish building the {@code ObjectManagerClient} object. This will call
         * {@link GObject#withProperties} to create a new GObject instance,
         * which is then cast to {@code ObjectManagerClient}.
         *
         * @return a new instance of {@code ObjectManagerClient} with the properties
         *         that were set in the Builder object.
         */
        public ObjectManagerClient build() {
            try {
                var _instance = (ObjectManagerClient) GObject.withProperties(ObjectManagerClient.getType(), getNames(), getValues());
                connectSignals(_instance.handle());
                return _instance;
            } finally {
                for (Value _value : getValues()) _value.unset();
                getArena().close();
            }
        }
    }

    private static final class MethodHandles {
        static final MethodHandle goa_object_manager_client_new_finish = Interop.downcallHandle(
                "goa_object_manager_client_new_finish", FunctionDescriptor.of(ValueLayout.ADDRESS,
                ValueLayout.ADDRESS, ValueLayout.ADDRESS), false);

        static final MethodHandle goa_object_manager_client_new_for_bus_finish = Interop.downcallHandle(
                "goa_object_manager_client_new_for_bus_finish",
                FunctionDescriptor.of(ValueLayout.ADDRESS, ValueLayout.ADDRESS,
                ValueLayout.ADDRESS), false);

        static final MethodHandle goa_object_manager_client_new_for_bus_sync = Interop.downcallHandle(
                "goa_object_manager_client_new_for_bus_sync",
                FunctionDescriptor.of(ValueLayout.ADDRESS, ValueLayout.JAVA_INT,
                ValueLayout.JAVA_INT, ValueLayout.ADDRESS, ValueLayout.ADDRESS, ValueLayout.ADDRESS,
                ValueLayout.ADDRESS), false);

        static final MethodHandle goa_object_manager_client_new_sync = Interop.downcallHandle(
                "goa_object_manager_client_new_sync", FunctionDescriptor.of(ValueLayout.ADDRESS,
                ValueLayout.ADDRESS, ValueLayout.JAVA_INT, ValueLayout.ADDRESS, ValueLayout.ADDRESS,
                ValueLayout.ADDRESS, ValueLayout.ADDRESS), false);

        static final MethodHandle goa_object_manager_client_get_proxy_type = Interop.downcallHandle(
                "goa_object_manager_client_get_proxy_type",
                FunctionDescriptor.of(ValueLayout.JAVA_LONG, ValueLayout.ADDRESS,
                ValueLayout.ADDRESS, ValueLayout.ADDRESS, ValueLayout.ADDRESS), false);

        static final MethodHandle goa_object_manager_client_new = Interop.downcallHandle(
                "goa_object_manager_client_new", FunctionDescriptor.ofVoid(ValueLayout.ADDRESS,
                ValueLayout.JAVA_INT, ValueLayout.ADDRESS, ValueLayout.ADDRESS, ValueLayout.ADDRESS,
                ValueLayout.ADDRESS, ValueLayout.ADDRESS), false);

        static final MethodHandle goa_object_manager_client_new_for_bus = Interop.downcallHandle(
                "goa_object_manager_client_new_for_bus",
                FunctionDescriptor.ofVoid(ValueLayout.JAVA_INT, ValueLayout.JAVA_INT,
                ValueLayout.ADDRESS, ValueLayout.ADDRESS, ValueLayout.ADDRESS, ValueLayout.ADDRESS,
                ValueLayout.ADDRESS), false);
    }
}
