// This file was automatically generated by Java-GI. Do not edit this file
// directly! Visit <https://github.com/jwharm/java-gi/> for more information.
//
// The API documentation in this file was derived from GObject-Introspection
// metadata and may include text or comments from the original C sources.
//
// Copyright (c), upstream authors as identified in the GObject-Introspection
// metadata.
//
// This generated file is distributed under the same license as the original
// GObject-Introspection data, unless otherwise specified. Users of this file
// are responsible for complying with any licenses or terms required by the
// original authors.
//
// THIS FILE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT.
//
package goa;

import io.github.jwharm.javagi.base.GLibLogger;
import io.github.jwharm.javagi.base.Proxy;
import io.github.jwharm.javagi.gobject.BuilderInterface;
import io.github.jwharm.javagi.gobject.InstanceCache;
import io.github.jwharm.javagi.interop.Interop;
import java.lang.Deprecated;
import java.lang.foreign.Arena;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import javax.annotation.processing.Generated;
import org.gnome.gio.DBusObject;
import org.gnome.glib.Type;
import org.gnome.gobject.GObject;
import org.gnome.gobject.TypeInterface;
import org.gnome.gobject.Value;

/**
 * The {@code GoaObject} type is a specialized container of interfaces.
 */
@Generated("io.github.jwharm.JavaGI")
public interface GoaObject extends Proxy, DBusObject {
    /**
     * Get the GType of the GoaObject class
     *
     * @return the GType
     */
    static Type getType() {
        return Interop.getType("goa_object_get_type");
    }

    /**
     * Gets the {@code GoaAccount} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Account.top_of_page"&gt;org.gnome.OnlineAccounts.Account&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaAccount} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default Account getAccount() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_account.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Account _returnValue = (Account) InstanceCache.getForType(_result, Account.AccountImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaCalendar} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Calendar.top_of_page"&gt;org.gnome.OnlineAccounts.Calendar&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaCalendar} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default Calendar getCalendar() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_calendar.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Calendar _returnValue = (Calendar) InstanceCache.getForType(_result, Calendar.CalendarImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaChat} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Chat.top_of_page"&gt;org.gnome.OnlineAccounts.Chat&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaChat} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default Chat getChat() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_chat.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Chat _returnValue = (Chat) InstanceCache.getForType(_result, Chat.ChatImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaContacts} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Contacts.top_of_page"&gt;org.gnome.OnlineAccounts.Contacts&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaContacts} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default Contacts getContacts() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_contacts.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Contacts _returnValue = (Contacts) InstanceCache.getForType(_result, Contacts.ContactsImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaDocuments} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Documents.top_of_page"&gt;org.gnome.OnlineAccounts.Documents&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaDocuments} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Documents getDocuments() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_documents.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Documents _returnValue = (Documents) InstanceCache.getForType(_result, Documents.DocumentsImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaExchange} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Exchange.top_of_page"&gt;org.gnome.OnlineAccounts.Exchange&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaExchange} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.6.0
     */
    default Exchange getExchange() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_exchange.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Exchange _returnValue = (Exchange) InstanceCache.getForType(_result, Exchange.ExchangeImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaFiles} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Files.top_of_page"&gt;org.gnome.OnlineAccounts.Files&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaFiles} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.8.0
     */
    default Files getFiles() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_files.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Files _returnValue = (Files) InstanceCache.getForType(_result, Files.FilesImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaMail} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Mail.top_of_page"&gt;org.gnome.OnlineAccounts.Mail&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaMail} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default Mail getMail() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_mail.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Mail _returnValue = (Mail) InstanceCache.getForType(_result, Mail.MailImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaManager} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Manager.top_of_page"&gt;org.gnome.OnlineAccounts.Manager&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaManager} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default Manager getManager() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_manager.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Manager _returnValue = (Manager) InstanceCache.getForType(_result, Manager.ManagerImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaMaps} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Maps.top_of_page"&gt;org.gnome.OnlineAccounts.Maps&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaMaps} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.14.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Maps getMaps() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_maps.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Maps _returnValue = (Maps) InstanceCache.getForType(_result, Maps.MapsImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaMediaServer} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-MediaServer.top_of_page"&gt;org.gnome.OnlineAccounts.MediaServer&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaMediaServer} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.14
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default MediaServer getMediaServer() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_media_server.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        MediaServer _returnValue = (MediaServer) InstanceCache.getForType(_result, MediaServer.MediaServerImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaMusic} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Music.top_of_page"&gt;org.gnome.OnlineAccounts.Music&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaMusic} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.18.0
     */
    default Music getMusic() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_music.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Music _returnValue = (Music) InstanceCache.getForType(_result, Music.MusicImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaOAuth2Based} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-OAuth2Based.top_of_page"&gt;org.gnome.OnlineAccounts.OAuth2Based&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaOAuth2Based} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default OAuth2Based getOauth2Based() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_oauth2_based.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        OAuth2Based _returnValue = (OAuth2Based) InstanceCache.getForType(_result, OAuth2Based.OAuth2BasedImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaOAuthBased} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-OAuthBased.top_of_page"&gt;org.gnome.OnlineAccounts.OAuthBased&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaOAuthBased} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     */
    default OAuthBased getOauthBased() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_oauth_based.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        OAuthBased _returnValue = (OAuthBased) InstanceCache.getForType(_result, OAuthBased.OAuthBasedImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaPasswordBased} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-PasswordBased.top_of_page"&gt;org.gnome.OnlineAccounts.PasswordBased&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaPasswordBased} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.6.0
     */
    default PasswordBased getPasswordBased() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_password_based.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        PasswordBased _returnValue = (PasswordBased) InstanceCache.getForType(_result, PasswordBased.PasswordBasedImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaPhotos} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Photos.top_of_page"&gt;org.gnome.OnlineAccounts.Photos&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaPhotos} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.8.0
     */
    default Photos getPhotos() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_photos.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Photos _returnValue = (Photos) InstanceCache.getForType(_result, Photos.PhotosImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaPrinters} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Printers.top_of_page"&gt;org.gnome.OnlineAccounts.Printers&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaPrinters} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.12.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Printers getPrinters() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_printers.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Printers _returnValue = (Printers) InstanceCache.getForType(_result, Printers.PrintersImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaReadLater} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-ReadLater.top_of_page"&gt;org.gnome.OnlineAccounts.ReadLater&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaReadLater} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.12.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default ReadLater getReadLater() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_read_later.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        ReadLater _returnValue = (ReadLater) InstanceCache.getForType(_result, ReadLater.ReadLaterImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaTicketing} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Ticketing.top_of_page"&gt;org.gnome.OnlineAccounts.Ticketing&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaTicketing} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.6.0
     */
    default Ticketing getTicketing() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_ticketing.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Ticketing _returnValue = (Ticketing) InstanceCache.getForType(_result, Ticketing.TicketingImpl::new);
        return _returnValue;
    }

    /**
     * Gets the {@code GoaTodo} instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Todo.top_of_page"&gt;org.gnome.OnlineAccounts.Todo&lt;/link&gt; on this Object, if any.
     *
     * @return A {@code GoaTodo} that must be freed with g_object_unref() or {@code null} if this Object does not implement the interface.
     * @since 3.26.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Todo getTodo() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_get_todo.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Todo _returnValue = (Todo) InstanceCache.getForType(_result, Todo.TodoImpl::new);
        return _returnValue;
    }

    /**
     * Like goa_object_get_account() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaAccount} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default Account peekAccount() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_account.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Account _returnValue = (Account) InstanceCache.getForType(_result, Account.AccountImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Account %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_calendar() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaCalendar} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default Calendar peekCalendar() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_calendar.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Calendar _returnValue = (Calendar) InstanceCache.getForType(_result, Calendar.CalendarImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Calendar %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_chat() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaChat} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default Chat peekChat() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_chat.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Chat _returnValue = (Chat) InstanceCache.getForType(_result, Chat.ChatImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Chat %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_contacts() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaContacts} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default Contacts peekContacts() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_contacts.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Contacts _returnValue = (Contacts) InstanceCache.getForType(_result, Contacts.ContactsImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Contacts %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_documents() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaDocuments} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Documents peekDocuments() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_documents.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Documents _returnValue = (Documents) InstanceCache.getForType(_result, Documents.DocumentsImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Documents %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_exchange() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaExchange} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.6.0
     */
    default Exchange peekExchange() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_exchange.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Exchange _returnValue = (Exchange) InstanceCache.getForType(_result, Exchange.ExchangeImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Exchange %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_files() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaFiles} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.8.0
     */
    default Files peekFiles() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_files.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Files _returnValue = (Files) InstanceCache.getForType(_result, Files.FilesImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Files %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_mail() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaMail} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default Mail peekMail() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_mail.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Mail _returnValue = (Mail) InstanceCache.getForType(_result, Mail.MailImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Mail %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_manager() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaManager} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default Manager peekManager() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_manager.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Manager _returnValue = (Manager) InstanceCache.getForType(_result, Manager.ManagerImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Manager %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_maps() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaMaps} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.14.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Maps peekMaps() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_maps.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Maps _returnValue = (Maps) InstanceCache.getForType(_result, Maps.MapsImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Maps %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_media_server() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaMediaServer} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.14
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default MediaServer peekMediaServer() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_media_server.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        MediaServer _returnValue = (MediaServer) InstanceCache.getForType(_result, MediaServer.MediaServerImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.MediaServer %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_music() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaMusic} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.18.0
     */
    default Music peekMusic() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_music.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Music _returnValue = (Music) InstanceCache.getForType(_result, Music.MusicImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Music %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_oauth2_based() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaOAuth2Based} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default OAuth2Based peekOauth2Based() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_oauth2_based.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        OAuth2Based _returnValue = (OAuth2Based) InstanceCache.getForType(_result, OAuth2Based.OAuth2BasedImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.OAuth2Based %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_oauth_based() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaOAuthBased} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     */
    default OAuthBased peekOauthBased() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_oauth_based.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        OAuthBased _returnValue = (OAuthBased) InstanceCache.getForType(_result, OAuthBased.OAuthBasedImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.OAuthBased %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_password_based() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaPasswordBased} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.6.0
     */
    default PasswordBased peekPasswordBased() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_password_based.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        PasswordBased _returnValue = (PasswordBased) InstanceCache.getForType(_result, PasswordBased.PasswordBasedImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.PasswordBased %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_photos() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaPhotos} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.8.0
     */
    default Photos peekPhotos() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_photos.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Photos _returnValue = (Photos) InstanceCache.getForType(_result, Photos.PhotosImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Photos %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_printers() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaPrinters} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.12.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Printers peekPrinters() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_printers.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Printers _returnValue = (Printers) InstanceCache.getForType(_result, Printers.PrintersImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Printers %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_read_later() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaReadLater} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.12.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default ReadLater peekReadLater() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_read_later.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        ReadLater _returnValue = (ReadLater) InstanceCache.getForType(_result, ReadLater.ReadLaterImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.ReadLater %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_ticketing() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaTicketing} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.6.0
     */
    default Ticketing peekTicketing() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_ticketing.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Ticketing _returnValue = (Ticketing) InstanceCache.getForType(_result, Ticketing.TicketingImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Ticketing %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * Like goa_object_get_todo() but doesn't increase the reference count on the returned object.
     * <p>
     * It is not safe to use the returned object if you are on another thread than the one where the {@code GDBusObjectManagerClient} or {@code GDBusObjectManagerServer} for this Object is running.
     *
     * @return A {@code GoaTodo} or {@code null} if this Object does not implement the interface. Do not free the returned object, it is owned by this Object.
     * @since 3.26.0
     * @deprecated The D-Bus interface has been deprecated.
     */
    @Deprecated
    default Todo peekTodo() {
        MemorySegment _result;
        try {
            _result = (MemorySegment) GoaObjectMethodHandles.goa_object_peek_todo.invokeExact(
                    handle());
        } catch (Throwable _err) {
            throw new AssertionError(_err);
        }
        if (_result == null || _result.equals(MemorySegment.NULL)) {
            return null;
        }
        Todo _returnValue = (Todo) InstanceCache.getForType(_result, Todo.TodoImpl::new);
        if (_returnValue instanceof GObject _gobject) {
            GLibLogger.debug("Ref goa.Todo %ld", _gobject.handle().address());
            _gobject.ref();
        }
        return _returnValue;
    }

    /**
     * The ObjectImpl type represents a native instance of the GoaObject interface.
     */
    class ObjectImpl extends GObject implements GoaObject {
        static {
            Goa.javagi$ensureInitialized();
        }

        /**
         * Creates a new instance of GoaObject for the provided memory address.
         *
         * @param address the memory address of the instance
         */
        public ObjectImpl(MemorySegment address) {
            super(address);
        }
    }

    /**
     * Virtual table for the {@code GoaObject} interface.
     */
    class ObjectIface extends TypeInterface {
        /**
         * Create a ObjectIface proxy instance for the provided memory address.
         *
         * @param address the memory address of the native object
         */
        public ObjectIface(MemorySegment address) {
            super(Interop.reinterpret(address, getMemoryLayout().byteSize()));
        }

        /**
         * Allocate a new ObjectIface.
         *
         * @param arena to control the memory allocation scope
         */
        public ObjectIface(Arena arena) {
            super(arena.allocate(getMemoryLayout()));
        }

        /**
         * Allocate a new ObjectIface.
         * The memory is allocated with {@link Arena#ofAuto}.
         */
        public ObjectIface() {
            super(Arena.ofAuto().allocate(getMemoryLayout()));
        }

        /**
         * The memory layout of the native struct.
         * @return the memory layout
         */
        public static MemoryLayout getMemoryLayout() {
            return MemoryLayout.structLayout(
                TypeInterface.getMemoryLayout().withName("parent_iface")
            ).withName("GoaObjectIface");
        }
    }

    interface Builder<B extends io.github.jwharm.javagi.gobject.Builder<B>> extends BuilderInterface {
        /**
         * The {@code GoaAccount} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Account.top_of_page"&gt;org.gnome.OnlineAccounts.Account&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param account the value for the {@code account} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setAccount(Account account) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Account.getType());
            _value.setObject((GObject) account);
            addBuilderProperty("account", _value);
            return (B) this;
        }

        /**
         * The {@code GoaCalendar} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Calendar.top_of_page"&gt;org.gnome.OnlineAccounts.Calendar&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param calendar the value for the {@code calendar} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setCalendar(Calendar calendar) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Calendar.getType());
            _value.setObject((GObject) calendar);
            addBuilderProperty("calendar", _value);
            return (B) this;
        }

        /**
         * The {@code GoaChat} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Chat.top_of_page"&gt;org.gnome.OnlineAccounts.Chat&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param chat the value for the {@code chat} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setChat(Chat chat) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Chat.getType());
            _value.setObject((GObject) chat);
            addBuilderProperty("chat", _value);
            return (B) this;
        }

        /**
         * The {@code GoaContacts} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Contacts.top_of_page"&gt;org.gnome.OnlineAccounts.Contacts&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param contacts the value for the {@code contacts} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setContacts(Contacts contacts) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Contacts.getType());
            _value.setObject((GObject) contacts);
            addBuilderProperty("contacts", _value);
            return (B) this;
        }

        /**
         * The {@code GoaDocuments} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Documents.top_of_page"&gt;org.gnome.OnlineAccounts.Documents&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param documents the value for the {@code documents} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        @Deprecated
        default B setDocuments(Documents documents) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Documents.getType());
            _value.setObject((GObject) documents);
            addBuilderProperty("documents", _value);
            return (B) this;
        }

        /**
         * The {@code GoaExchange} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Exchange.top_of_page"&gt;org.gnome.OnlineAccounts.Exchange&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param exchange the value for the {@code exchange} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.6.0
         */
        default B setExchange(Exchange exchange) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Exchange.getType());
            _value.setObject((GObject) exchange);
            addBuilderProperty("exchange", _value);
            return (B) this;
        }

        /**
         * The {@code GoaFiles} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Files.top_of_page"&gt;org.gnome.OnlineAccounts.Files&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param files the value for the {@code files} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.8.0
         */
        default B setFiles(Files files) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Files.getType());
            _value.setObject((GObject) files);
            addBuilderProperty("files", _value);
            return (B) this;
        }

        /**
         * The {@code GoaMail} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Mail.top_of_page"&gt;org.gnome.OnlineAccounts.Mail&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param mail the value for the {@code mail} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setMail(Mail mail) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Mail.getType());
            _value.setObject((GObject) mail);
            addBuilderProperty("mail", _value);
            return (B) this;
        }

        /**
         * The {@code GoaManager} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Manager.top_of_page"&gt;org.gnome.OnlineAccounts.Manager&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param manager the value for the {@code manager} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setManager(Manager manager) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Manager.getType());
            _value.setObject((GObject) manager);
            addBuilderProperty("manager", _value);
            return (B) this;
        }

        /**
         * The {@code GoaMaps} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Maps.top_of_page"&gt;org.gnome.OnlineAccounts.Maps&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param maps the value for the {@code maps} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.14.0
         */
        @Deprecated
        default B setMaps(Maps maps) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Maps.getType());
            _value.setObject((GObject) maps);
            addBuilderProperty("maps", _value);
            return (B) this;
        }

        /**
         * The {@code GoaMediaServer} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-MediaServer.top_of_page"&gt;org.gnome.OnlineAccounts.MediaServer&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param mediaServer the value for the {@code media-server} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.14
         */
        @Deprecated
        default B setMediaServer(MediaServer mediaServer) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(MediaServer.getType());
            _value.setObject((GObject) mediaServer);
            addBuilderProperty("media-server", _value);
            return (B) this;
        }

        /**
         * The {@code GoaMusic} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Music.top_of_page"&gt;org.gnome.OnlineAccounts.Music&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param music the value for the {@code music} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.18.0
         */
        default B setMusic(Music music) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Music.getType());
            _value.setObject((GObject) music);
            addBuilderProperty("music", _value);
            return (B) this;
        }

        /**
         * The {@code GoaOAuthBased} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-OAuthBased.top_of_page"&gt;org.gnome.OnlineAccounts.OAuthBased&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param oauthBased the value for the {@code oauth-based} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setOauthBased(OAuthBased oauthBased) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(OAuthBased.getType());
            _value.setObject((GObject) oauthBased);
            addBuilderProperty("oauth-based", _value);
            return (B) this;
        }

        /**
         * The {@code GoaOAuth2Based} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-OAuth2Based.top_of_page"&gt;org.gnome.OnlineAccounts.OAuth2Based&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param oauth2Based the value for the {@code oauth2-based} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         */
        default B setOauth2Based(OAuth2Based oauth2Based) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(OAuth2Based.getType());
            _value.setObject((GObject) oauth2Based);
            addBuilderProperty("oauth2-based", _value);
            return (B) this;
        }

        /**
         * The {@code GoaPasswordBased} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-PasswordBased.top_of_page"&gt;org.gnome.OnlineAccounts.PasswordBased&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param passwordBased the value for the {@code password-based} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.6.0
         */
        default B setPasswordBased(PasswordBased passwordBased) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(PasswordBased.getType());
            _value.setObject((GObject) passwordBased);
            addBuilderProperty("password-based", _value);
            return (B) this;
        }

        /**
         * The {@code GoaPhotos} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Photos.top_of_page"&gt;org.gnome.OnlineAccounts.Photos&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param photos the value for the {@code photos} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.8.0
         */
        default B setPhotos(Photos photos) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Photos.getType());
            _value.setObject((GObject) photos);
            addBuilderProperty("photos", _value);
            return (B) this;
        }

        /**
         * The {@code GoaPrinters} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Printers.top_of_page"&gt;org.gnome.OnlineAccounts.Printers&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param printers the value for the {@code printers} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.12.0
         */
        @Deprecated
        default B setPrinters(Printers printers) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Printers.getType());
            _value.setObject((GObject) printers);
            addBuilderProperty("printers", _value);
            return (B) this;
        }

        /**
         * The {@code GoaReadLater} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-ReadLater.top_of_page"&gt;org.gnome.OnlineAccounts.ReadLater&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param readLater the value for the {@code read-later} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.12.0
         */
        @Deprecated
        default B setReadLater(ReadLater readLater) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(ReadLater.getType());
            _value.setObject((GObject) readLater);
            addBuilderProperty("read-later", _value);
            return (B) this;
        }

        /**
         * The {@code GoaTicketing} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Ticketing.top_of_page"&gt;org.gnome.OnlineAccounts.Ticketing&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param ticketing the value for the {@code ticketing} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.6.0
         */
        default B setTicketing(Ticketing ticketing) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Ticketing.getType());
            _value.setObject((GObject) ticketing);
            addBuilderProperty("ticketing", _value);
            return (B) this;
        }

        /**
         * The {@code GoaTodo} instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-OnlineAccounts-Todo.top_of_page"&gt;org.gnome.OnlineAccounts.Todo&lt;/link&gt;, if any.
         * <p>
         * Connect to the {@code GObject}::notify signal to get informed of property changes.
         *
         * @param todo the value for the {@code todo} property
         * @return the {@code Builder} instance is returned, to allow method chaining
         * @since 3.26.0
         */
        @Deprecated
        default B setTodo(Todo todo) {
            Arena _arena = getArena();
            Value _value = new Value(_arena);
            _value.init(Todo.getType());
            _value.setObject((GObject) todo);
            addBuilderProperty("todo", _value);
            return (B) this;
        }
    }
}
